name: DEV Infra

on:
    push:
        branches: 
        - 'dev'
    workflow_dispatch:
        inputs:
            confirm_destroy:
                description: 'Confirm destroy of resources'
                required: true
                default: 'DESTROY'

env:
    AWS_REGION: ap-northeast-2

jobs:
    backend_config:
        name: Backend Configuration
        if: ${{ github.event_name != 'workflow_dispatch' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
            
            - name: Install Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_version: latest
            
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: ${{ env.AWS_REGION }}

            - name: Terraform Init (Backend)
              working-directory: backend
              run: terraform init
                  
            - name: Terraform Import S3 Bucket
              working-directory: backend
              run: terraform import aws_s3_bucket.terraform_state terraform-state-dev-morgan || echo "Bucket import failed."
                  
            - name: Terraform Import DynamoDB Table
              working-directory: backend
              run: terraform import aws_dynamodb_table.terraform_state_lock terraform-state-lock-dev-morgan || echo "DynamoDB table import failed."
            
            - name: Terraform Plan (Backend)
              working-directory: backend
              id: backend_plan
              run: |
                terraform plan -detailed-exitcode || exit_code=$? && echo "::set-output name=exitcode::$exit_code"
            
            - name: Terraform Apply (Backend)
              working-directory: backend
              if: steps.backend_plan.outputs.exitcode == '2'
              run: terraform apply -auto-approve
